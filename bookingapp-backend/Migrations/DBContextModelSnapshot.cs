// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bookingapp_backend.Models;
using bookingapp_backend.Repository;

namespace bookingapp_backend.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("bookingapp_backend.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int>("LabId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LabId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("bookingapp_backend.Models.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("ReceiverEmail")
                        .HasColumnType("text");

                    b.Property<DateTime>("SentTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("bookingapp_backend.Models.Lab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Details")
                        .HasColumnType("text");

                    b.Property<string>("LabId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Labs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateAdded = new DateTime(2022, 6, 25, 11, 35, 56, 165, DateTimeKind.Local).AddTicks(5526),
                            DateUpdated = new DateTime(2022, 6, 25, 11, 35, 56, 166, DateTimeKind.Local).AddTicks(2235),
                            Details = "CCNA Lab Remote",
                            LabId = "ccna",
                            Name = "CCNA"
                        },
                        new
                        {
                            Id = 2,
                            DateAdded = new DateTime(2022, 6, 25, 11, 35, 56, 166, DateTimeKind.Local).AddTicks(2597),
                            DateUpdated = new DateTime(2022, 6, 25, 11, 35, 56, 166, DateTimeKind.Local).AddTicks(2608),
                            Details = "CISCO Official Lab",
                            LabId = "cisco",
                            Name = "CISCO"
                        });
                });

            modelBuilder.Entity("bookingapp_backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<int>("Role").HasValue(0);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateAdded = new DateTime(2022, 6, 25, 11, 35, 56, 167, DateTimeKind.Local).AddTicks(2278),
                            DateUpdated = new DateTime(2022, 6, 25, 11, 35, 56, 167, DateTimeKind.Local).AddTicks(2529),
                            Email = "18895045@student.curtin.edu.au",
                            Name = "Haris",
                            Role = 0,
                            Uid = "18895045"
                        },
                        new
                        {
                            Id = 2,
                            DateAdded = new DateTime(2022, 6, 25, 11, 35, 56, 167, DateTimeKind.Local).AddTicks(2815),
                            DateUpdated = new DateTime(2022, 6, 25, 11, 35, 56, 167, DateTimeKind.Local).AddTicks(2825),
                            Email = "harisali808@hotmail.com",
                            Name = "Ali",
                            Role = 0,
                            Uid = "12345678"
                        },
                        new
                        {
                            Id = 3,
                            DateAdded = new DateTime(2022, 6, 25, 11, 35, 56, 167, DateTimeKind.Local).AddTicks(2833),
                            DateUpdated = new DateTime(2022, 6, 25, 11, 35, 56, 167, DateTimeKind.Local).AddTicks(2834),
                            Email = "harisali808@gmail.com",
                            Name = "Muhammad",
                            Role = 0,
                            Uid = "87654321"
                        });
                });

            modelBuilder.Entity("bookingapp_backend.Models.Instructor", b =>
                {
                    b.HasBaseType("bookingapp_backend.Models.User");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue(1);

                    b.HasData(
                        new
                        {
                            Id = 4,
                            DateAdded = new DateTime(2022, 6, 25, 11, 35, 56, 167, DateTimeKind.Local).AddTicks(3565),
                            DateUpdated = new DateTime(2022, 6, 25, 11, 35, 56, 167, DateTimeKind.Local).AddTicks(3569),
                            Email = "harisali808+instructor@hotmail.com",
                            Name = "Haris Ali",
                            Role = 1,
                            Uid = "admin",
                            Password = "NFPXWx9MXvRwj/lDmsGQUNL65bQ8tbsRdVgFzNPJTAM="
                        });
                });

            modelBuilder.Entity("bookingapp_backend.Models.Booking", b =>
                {
                    b.HasOne("bookingapp_backend.Models.Lab", null)
                        .WithMany("Bookings")
                        .HasForeignKey("LabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bookingapp_backend.Models.User", null)
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
